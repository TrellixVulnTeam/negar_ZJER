{"ast":null,"code":"import _slicedToArray from \"/Users/setare/Desktop/negar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/setare/Desktop/negar/src/views/Components/Sections/SectionA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport desktopImage from \"../../../assets/img/z.jpeg\";\nimport mobileImage from \"../../../assets/img/ggg.jpeg\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport negar from \"../../../assets/img/nn.png\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SectionA() {\n  _s();\n\n  var _useState = useState(window.innerWidth),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowWidth = _useState2[0],\n      setWindowWidth = _useState2[1];\n\n  var imageUrl = windowWidth >= 650 ? desktopImage : mobileImage;\n  useEffect(function () {\n    var handleWindowResize = function handleWindowResize() {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return function () {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, []);\n  var SmallAvatar = styled(Avatar)(function (_ref) {\n    var theme = _ref.theme;\n    return {\n      width: 160,\n      height: 160,\n      border: \"5px solid \".concat(theme.palette.background.paper)\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundImage: \"url(\".concat(imageUrl, \")\")\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            overlap: \"circular\",\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"right\"\n            },\n            badgeContent: /*#__PURE__*/_jsxDEV(SmallAvatar, {\n              alt: \"n\",\n              src: negar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SectionA, \"XPjwYFA2mnyOQTDQkTW889KQ99c=\");\n\n_c = SectionA;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionA\");","map":{"version":3,"sources":["/Users/setare/Desktop/negar/src/views/Components/Sections/SectionA.js"],"names":["React","useState","useEffect","desktopImage","mobileImage","styled","Badge","Avatar","Box","negar","Grid","SectionA","window","innerWidth","windowWidth","setWindowWidth","imageUrl","handleWindowResize","addEventListener","removeEventListener","SmallAvatar","theme","width","height","border","palette","background","paper","backgroundImage","flexGrow","vertical","horizontal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,kBAAsCV,QAAQ,CAACW,MAAM,CAACC,UAAR,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,QAAQ,GAAGF,WAAW,IAAI,GAAf,GAAqBX,YAArB,GAAoCC,WAArD;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7BF,MAAAA,cAAc,CAACH,MAAM,CAACC,UAAR,CAAd;AACH,KAFD;;AAIAD,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,kBAAlC;AAEA,WAAO,YAAM;AACTL,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCF,kBAArC;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAMG,WAAW,GAAGf,MAAM,CAACE,MAAD,CAAN,CAAe;AAAA,QAAGc,KAAH,QAAGA,KAAH;AAAA,WAAgB;AAC/CC,MAAAA,KAAK,EAAE,GADwC;AAE/CC,MAAAA,MAAM,EAAE,GAFuC;AAG/CC,MAAAA,MAAM,sBAAeH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC,KAAxC;AAHyC,KAAhB;AAAA,GAAf,CAApB;AAMA,sBACK;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,gBAASZ,QAAT;AAAjB,KAA5B;AAAA,2BACD,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEa,QAAAA,QAAQ,EAAE;AAAZ,OAAT;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,OAAO,EAAC,UADZ;AAEI,YAAA,YAAY,EAAE;AAAEC,cAAAA,QAAQ,EAAE,QAAZ;AAAsBC,cAAAA,UAAU,EAAE;AAAlC,aAFlB;AAGI,YAAA,YAAY,eAAE,QAAC,WAAD;AAAa,cAAA,GAAG,EAAC,GAAjB;AAAqB,cAAA,GAAG,EAAEtB;AAA1B;AAAA;AAAA;AAAA;AAAA;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,OAAO,EAAC,QAA1B;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,UADL;AAyBH;;GA/CuBE,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport desktopImage from \"../../../assets/img/z.jpeg\";\nimport mobileImage from \"../../../assets/img/ggg.jpeg\";\nimport { styled } from \"@material-ui/core/styles\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport negar from \"../../../assets/img/nn.png\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nexport default function SectionA() {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const imageUrl = windowWidth >= 650 ? desktopImage : mobileImage;\n\n    useEffect(() => {\n        const handleWindowResize = () => {\n            setWindowWidth(window.innerWidth);\n        };\n\n        window.addEventListener(\"resize\", handleWindowResize);\n\n        return () => {\n            window.removeEventListener(\"resize\", handleWindowResize);\n        };\n    }, []);\n\n    const SmallAvatar = styled(Avatar)(({ theme }) => ({\n        width: 160,\n        height: 160,\n        border: `5px solid ${theme.palette.background.paper}`,\n    }));\n\n    return (\n         <div className=\"App\" style={{ backgroundImage: `url(${imageUrl})` }}>\n        <Box sx={{ flexGrow: 1 }}>\n            <Grid container spacing={2}>\n                <Grid item xs={2}>\n                    <Badge\n                        overlap=\"circular\"\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n                        badgeContent={<SmallAvatar alt=\"n\" src={negar} />}\n                    >\n                    </Badge>\n                </Grid>\n                <Grid item xs={8} justify=\"center\">\n                    <br />\n                    <br />\n                    {/* <p className=\"pp\" style={{ fontSize: \"26px\", paddingTop: \"40px\" }}>\n                        Hello! Thank you for stopping by!<br />\n                        Iâ€™m Nina Bakhshi,\n                        Professional freelance Makeup Artist,<br /> located on San Jose Ca.\n                </p> */}\n                </Grid>\n            </Grid>\n        </Box>\n       </div>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}